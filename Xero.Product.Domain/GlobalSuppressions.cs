// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductData.GetAllProducts(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Xero.Product.Domain.Models.Product}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.AddProduct(Xero.Product.Domain.Domain.ProductData)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ProductData> ProductService.AddProduct(ProductData product)', validate parameter 'product' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.AddProduct(Xero.Product.Domain.Domain.ProductData)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.AddProductOption(System.Guid,Xero.Product.Domain.Domain.ProductOption)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductOption}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ProductOption> ProductService.AddProductOption(Guid productId, ProductOption productOption)', validate parameter 'productOption' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.AddProductOption(System.Guid,Xero.Product.Domain.Domain.ProductOption)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductOption}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.DeleteProduct(System.Guid)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.DeleteProductOption(System.Guid,System.Guid)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductOption}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.GetAllProducts(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Xero.Product.Domain.Domain.ProductData}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.GetOptionById(System.Guid,System.Guid)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductOption}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.GetOptions(System.Guid)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Xero.Product.Domain.Domain.ProductOption}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.GetProduct(System.Guid)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.ProductExists(System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.ProductOptionExists(System.Guid,System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.UpdateProduct(System.Guid,Xero.Product.Domain.Domain.ProductData)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:Xero.Product.Domain.ProductService.UpdateProductOption(System.Guid,System.Guid,Xero.Product.Domain.Domain.ProductOption)~System.Threading.Tasks.Task{Xero.Product.Domain.Domain.ProductOption}")]